*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="ka_graficos1.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS fmr1 AS fmr OF "..\libs\sisven.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Foxcharts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowPercent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClipboard" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrintDirectly" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntChartRow" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntChartRow.spnChartsRow" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntChartRow.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmbChartType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdHTML" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdWord" UniqueID="" Timestamp="" />

	AutoCenter = .T.
	BorderStyle = 1
	Caption = "[Generar Graficos Estadisticos]"
	DoCreate = .T.
	Height = 583
	Name = "Fmr1"
	Width = 957

	ADD OBJECT 'chkShowPercent' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Mostrar Porcentajes", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 20, ;
		Name = "chkShowPercent", ;
		TabIndex = 10, ;
		Top = 484, ;
		Value = .F., ;
		Width = 134, ;
		ZOrderSet = 5
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmbChartType' AS combobox WITH ;
		BoundColumn = 1, ;
		ColumnCount = 1, ;
		ColumnLines = .F., ;
		FirstElement = 1, ;
		FontBold = .T., ;
		FontSize = 11, ;
		Height = 23, ;
		Left = 20, ;
		Name = "cmbChartType", ;
		NumberOfElements = 0, ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 6, ;
		Top = 442, ;
		Value = 1, ;
		Width = 225, ;
		ZOrderSet = 11
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cmdClipboard' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "Copiar al Portapapeles", ;
		Height = 27, ;
		Left = 677, ;
		Name = "cmdClipboard", ;
		TabIndex = 2, ;
		Top = 446, ;
		Width = 252
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdHTML' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "Enviar a HTML", ;
		Height = 27, ;
		Left = 677, ;
		Name = "cmdHTML", ;
		TabIndex = 8, ;
		Top = 481, ;
		Visible = .T., ;
		Width = 252
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrintDirectly' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "Imprimir", ;
		Height = 27, ;
		Left = 677, ;
		Name = "cmdPrintDirectly", ;
		TabIndex = 7, ;
		Top = 545, ;
		Width = 252
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'CmdSave' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "Grabar Grafico", ;
		Height = 27, ;
		Left = 677, ;
		Name = "CmdSave", ;
		TabIndex = 1, ;
		Top = 415, ;
		Width = 252
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdWord' AS commandbutton WITH ;
		Anchor = 6, ;
		Caption = "Enviar a WORD", ;
		Height = 27, ;
		Left = 677, ;
		Name = "cmdWord", ;
		TabIndex = 4, ;
		Top = 513, ;
		Visible = .T., ;
		Width = 252
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cntChartRow' AS container WITH ;
		BackStyle = 0, ;
		Height = 32, ;
		Left = 21, ;
		Name = "cntChartRow", ;
		TabIndex = 7, ;
		Top = 526, ;
		Width = 220, ;
		ZOrderSet = 8
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'cntChartRow.Label1' AS label WITH ;
		Anchor = 6, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Filas del Diagrama:", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 9, ;
		Name = "Label1", ;
		TabIndex = 8, ;
		Top = 9, ;
		Width = 108
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'cntChartRow.spnChartsRow' AS spinner WITH ;
		Anchor = 6, ;
		FontSize = 8, ;
		Height = 22, ;
		KeyboardHighValue = 5, ;
		KeyboardLowValue = 1, ;
		Left = 161, ;
		Name = "spnChartsRow", ;
		SpinnerHighValue = 5.00, ;
		SpinnerLowValue = 1.00, ;
		TabIndex = 9, ;
		Top = 5, ;
		Value = 1, ;
		Visible = .T., ;
		Width = 41
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'Container1' AS container WITH ;
		BackStyle = 0, ;
		BorderColor = 0,0,0, ;
		BorderWidth = 1, ;
		Height = 169, ;
		Left = 6, ;
		Name = "Container1", ;
		Top = 408, ;
		Width = 935
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Foxcharts' AS foxcharts WITH ;
		Height = 386, ;
		Left = 6, ;
		Name = "Foxcharts", ;
		Top = 12, ;
		Width = 938, ;
		Title.Name = "Title", ;
		SubTitle.Name = "SubTitle", ;
		XAxis.Name = "XAxis", ;
		YAxis.Name = "YAxis", ;
		ScaleLegend.Name = "ScaleLegend", ;
		AxisLegend2.Name = "AxisLegend2", ;
		ShapeLegend.Name = "ShapeLegend", ;
		SideLegend.Name = "SideLegend", ;
		ChartCanvas.Name = "ChartCanvas", ;
		Fields.Name = "Fields", ;
		ToolTip.Name = "ToolTip"
		*< END OBJECT: ClassLib="..\libs\foxcharts.vcx" BaseClass="container" />

	ADD OBJECT 'Label1' AS label WITH ;
		Anchor = 6, ;
		AutoSize = .T., ;
		BackColor = 0,0,0, ;
		BackStyle = 0, ;
		Caption = "Tipo Grafico:", ;
		FontBold = .T., ;
		FontSize = 11, ;
		ForeColor = 0,0,0, ;
		Height = 20, ;
		Left = 20, ;
		Name = "Label1", ;
		TabIndex = 5, ;
		Top = 418, ;
		Width = 94, ;
		ZOrderSet = 13
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Init
		Lparameters ct
		* Create a new empty form
		* Drop an instance of FoxCharts to it
		* Put the following code in the Init() event of the form
		
		* Make sure the form and foxcharts are big enough so that the chart
		* will appear well
		
		* Create main cursor
		* Populate cursor with data each column with the sales amount for each month
		* this will have 12 rows, one for each month
		
		Select Sum(cant) As cant,Month(fech) As mes,cmes1(Month(fech)) As cmes From uc Into Cursor rm2 Group By mes
		
		* Next step is to Setup FoxCharts
		* Supposing you already dropped an instance of FoxCharts to any form
		Local loChart
		loChart = This
		
		With loChart As FoxCharts Of FoxCharts.Vcx
		
			Thisform.FoxCharts.ChartType=9
		*.ChartType = 9 && Line
		
		* Then, we need to tell the class that it will receive 3 fields of data
		* Each field will represent one line
		* Later you can try changing the value of the property "ChartType" with values from 1 to 14
		* Be careful because we don't have Charttype #3 available yet :-)
		
			Thisform.FoxCharts.ChartsCount=1
		*.ChartsCount = 3
		
		* Then we tell FoxCharts the name of the cursor that contains the data needed
			Thisform.FoxCharts.SourceAlias  = "rm2"
			Thisform.FoxCharts.FieldAxis2 = "cMes"
			Thisform.FoxCharts.FieldLegend= "cMes"
		
		* Next step is to populate the collection object that will receive the information from the cursor
		
		* Start with the first column - BABIES
			Thisform.FoxCharts.Fields(1).FieldValue = "cant" && This is the name of the 1st column of the cursor
			Thisform.FoxCharts.Fields(1).Legend = "Cantidad"
			Thisform.FoxCharts.Fields(1).Color  = Rgb(100,175,213) && Blue
		
		
		* Setting the title and subtitle
			If ct='V' Then
				Thisform.FoxCharts.Title.Caption = "Ventas por Producto:"+Alltrim(lproductos.Descri)
			Else
				Thisform.FoxCharts.Title.Caption = "Compras por Producto"+Alltrim(lproductos.Descri)
			Endif
			Thisform.FoxCharts.SubTitle.Caption = ""
		
			Thisform.FoxCharts.FontName = "Tahoma"
		
		* Setting the Chart Depth ( 3d effect )
			Thisform.FoxCharts.Depth = 10
		
		* Set the backColor
			Thisform.FoxCharts.BackColor = Rgb(255,255,255)
		
		* Set the colors to Random
			Thisform.FoxCharts.ColorType = 2 && Random
		
		* Set Colors to Gradient
			Thisform.FoxCharts.BrushType = 2 && Gradient colors
		
		
		* Set the captions for the axis
			Thisform.FoxCharts.XAxis.Caption = "Mes"
			Thisform.FoxCharts.YAxis.Caption = "Cantidad en Unidades"
		
		* Set the 2nd legend
			Thisform.FoxCharts.AxisLegend2.Alignment = 0 && Left
			Thisform.FoxCharts.AxisLegend2.Rotation = 45
			Thisform.FoxCharts.AxisLegend2.FontName = "Verdana"
			Thisform.FoxCharts.AxisLegend2.FontSize = 6
		
		
			Thisform.FoxCharts.ShowValuesOnShapes = .T.
			Thisform.FoxCharts.ShapeLegendExpression = "TRANSFORM(This.CurrValue) + CHR(13) + CHR(10) + This.CurrLegend"
		
		* Draw the chart
			Thisform.FoxCharts.DrawChart()
		
		Endwith
		
	ENDPROC

	PROCEDURE chkShowPercent.InteractiveChange
		thisform.foxcharts.ShowPercentages=this.Value 
		thisform.foxcharts.DrawChart()
		*oChart.DrawChart()
		RETURN
	ENDPROC

	PROCEDURE cmbChartType.Init
		This.AddProperty("aCharts[1]")
		DIMENSION This.aCharts(17)
		
		WITH This
			.aCharts(1)  = " 1 - Pie                      "
			.aCharts(2)  = " 2 - Rosca                    "
			.aCharts(3)  = " 3 - Barras Apiladas Completas"
			.aCharts(4)  = " 4 - Puntos                   "
			.aCharts(5)  = " 5 - Lineas                   "
			.aCharts(6)  = " 6 - Area                     "
			.aCharts(7)  = " 7 - Barras Simples           "
			.aCharts(8)  = " 8 - Barras Multiples         "
			.aCharts(9)  = " 9 - Barras Apiladas          "
			.aCharts(10) = "10 - Zonas                    "
			.aCharts(11) = "11 - Barras 3D                "
			.aCharts(12) = "12 - Barras Simple Horiz.     "
			.aCharts(13) = "13 - Barras Multiples Horiz.  "
			.aCharts(14) = "14 - Barras Horiz. Apiladas   "
			.aCharts(15) = "15 - Barras Completas Apil.   "
			.aCharts(16) = "16 - Area Completas           "
			.aCharts(17) = "17 - Barras Horiz.Acopladas   "
		
			.RowSourceType = 5 && Array
			.RowSource = "This.aCharts"
		ENDWITH 
		
		RETURN
	ENDPROC

	PROCEDURE cmbChartType.Valid
		LOCAL lnChart
		lnChart = This.ListIndex 
		thisform.foxcharts.ChartType=lnchart
		thisform.foxcharts.DrawChart() 
		RETURN
	ENDPROC

	PROCEDURE cmdClipboard.Click
		LOCAL llSuccess
		llSuccess = thisform.foxcharts.oBmp.ToClipboard()
		
		IF llSuccess
			WAIT WINDOW "Copiado Correctamente en el Portapaleles"
		ELSE
			WAIT WINDOW "Error al enviar la Imagen al Portapapeles"
		ENDIF 
	ENDPROC

	PROCEDURE cmdHTML.Click
		LOCAL loChart as FoxCharts OF "..\Source\FoxCharts.Vcx"
		loChart = Thisform.foxcharts 
		
		LOCAL lcDir, lcHtml, lcHTMLname, lcPicture
		lcDir = ADDBS(GETENV("TEMP"))
		
		lcHtmlName = lcDir + 'Charts.html'
		lcHtml=''
		
		lcPicture = lcDir + '_TempChart.Png' 
		loChart.SaveToFile(lcPicture)
		
		SET TEXTMERGE ON 
		
		TEXT TO lcHtml ADDITIVE NOSHOW 
		
		<html>
		<head>
		<title>Graficos</title>
		
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251">
		</head>
		
		<style type="text/css">
		  table.border tr td,
		  table.border tr th {border:1px solid black;}
		  table.border {border-collapse:collapse;}
		</style>
		
		<body>
		<p></p>
		<font face="tahoma, arial, times new roman">
		
		<p><b><h1 align="center"><<thisform.Caption>></h1></b></p>
		
		<table align="center" class="border"> 
		<tr>
		<th width=70>-</th>
		
		ENDTEXT
		
		
		* AddTable
		
		SELECT * FROM (loChart._datacursor) INTO CURSOR MainCursor
		SELECT MainCursor
		
		LOCAL lnCharts, lnRow, lnChart, lnCol
		lnCharts = loChart.ChartsCount 
		lnRow = loChart.ChartRow 
		
		FOR lnChart = 1 TO lnCharts 
		
		TEXT TO lcHtml ADDITIVE NOSHOW   
		<th width=70><<EVL(loChart.Fields(lnChart).Legend,'-')>></th>
		<<IIF(lnChart=lnCharts,'</tr>'+CHR(13)+CHR(10),'')>>
		ENDTEXT
		NEXT
		
		SCAN
		
		TEXT TO lcHtml ADDITIVE NOSHOW  
		<tr>
		<th><<ALLTRIM(MainCursor.cLegend)>></th>
		
		ENDTEXT
		
		FOR lnCol = 1 TO lnCharts 
		
		TEXT TO lcHtml ADDITIVE NOSHOW
		<td align="center"<<IIF((lnCol = lnRow AND loChart.SingleData), ' bgcolor=#f3f0ff>','>')>><<TRANSFORM(EVALUATE('nValue'+TRANSFORM(lnCol)))>></td>
		<<IIF(lnCol = lnCharts,'</tr>' + CHR(13) + CHR(10),'')>>
		ENDTEXT
		
		NEXT
		
		ENDSCAN 
		
		TEXT TO lcHtml ADDITIVE NOSHOW
		</table> 
		<p></p> 
		
		<table align="center"><tr>
		<IMG src="<<lcPicture>>">
		</tr></table>
		
		</font>
		</body>
		</html>
		ENDTEXT
		
		SET TEXTMERGE OFF
		
		lcPicture='' 
		
		STRTOFILE(lcHtml,lcHtmlName,0) 
		
		LOCAL loIE
		loIE = CREATEOBJECT("InternetExplorer.Application")
		loIE.Visible=.t.
		loIE.NAVIGATE(lcHtmlName,4)
	ENDPROC

	PROCEDURE cmdPrintDirectly.Click
		LOCAL loBmp as xfcBitmap
		loBmp = Thisform.foxcharts.oBmp 
		loBmp.ToPrinter()
	ENDPROC

	PROCEDURE CmdSave.Click
		LOCAL lcImgFormatTypes, lcFile
		lcImgFormatTypes = "Bmp;Jpg;Gif;Png;Tif;Emf"
		
		lcFile = PUTFILE("Save Image as...", "", lcImgFormatTypes)
		
		IF EMPTY(lcFile) && Invalid File Name
			RETURN .F.
		ENDIF
		thisform.foxcharts.SaveToFile(lcfile)
		*This.Parent.Parent.oFoxcharts.SaveToFile(lcFile)
		RETURN
	ENDPROC

	PROCEDURE cmdWord.Click
		* Code from Alex Yudin
		* See also : Method Thisform.OpenWord
		* History  : Koen Piller added codes for Clipboard checking in order to
		*            avoid errors when the clipboard is already in use
		
		Local loChart As FoxCharts Of "..\Source\FoxCharts.Vcx"
		Local lcDir, lcWordName, lnChart
		
		LOCAL lnRows, lnColumns, lcTableNum, loTable, lnStartRows, lcString, ;
		    lcVal, lnType, luValue, lnStart, lnEnd, lnChart, lnLine, lcFile
		
		lcDir = Addbs(Getenv("TEMP"))
		lcWordName = lcDir + 'Charts.html'
		loChart = Thisform.foxcharts  
		
		#Define cf_bitmap  2
		#Define cf_dib     8
		#Define obj_bitmap 7
		
		Declare Integer CloseClipboard In user32
		Declare Integer OpenClipboard In user32 Integer HWnd
		Declare Integer GetClipboardData In user32 Integer uFormat
		Declare Integer IsClipboardFormatAvailable In user32 Integer wFormat
		Declare Integer GetObjectType In gdi32 Integer h
		
		***
		Local Array laHeaders(loChart.ChartsCount+1,2)
		laHeaders(1,1) = 'Legend'
		laHeaders(1,2) = ''
		
		For lnChart=1 To loChart.ChartsCount
		    laHeaders(lnChart+1,1) = 'Chart' + Alltrim(Str(lnChart))
		    laHeaders(lnChart+1,2) = Evl(loChart.Fields(lnChart).Legend,'-')
		Next
		
		
		***************************************************************
		* Method OpenWord
		* Code from Alex Yudin
		
		LOCAL loWord as "WORD.APPLICATION"
		Local lnWindow, lcPath, lcDoc
		lcDoc = lcWordName
		
		DECLARE INTEGER SetForegroundWindow IN Win32API LONG HWND
		DECLARE LONG FindWindow IN Win32API STRING lpClassName,STRING lpWindowName
		TRY
		    loWord=GETOBJECT(,"WORD.APPLICATION")
		CATCH TO loErr WHEN loErr.ERRORNO=1426
		    loWord=CREATEOBJECT("WORD.APPLICATION")
		FINALLY
		ENDTRY
		
		
		IF TYPE('loWord.ActiveDocument')='O'
		    loWord.ActiveDocument.CLOSE
		ENDIF
		lnWindow = FindWindow(.NULL., loWord.NAME)
		IF !EMPTY(lcDoc)
		    lcDoc=LOWER(FORCEEXT(ALLTRIM(lcDoc),'DOC'))
		    IF FILE(lcDoc)
		        lcDoc=FULLPATH(lcDoc)
		        loWord.Documents.OPEN(lcDoc)
		    ELSE
		        loWord.Documents.ADD ("Normal", .F., 0)
		        lcPath=JUSTPATH(lcDoc)
		        IF NOT DIRECTORY(lcPath)
		            MD (lcPath)
		        ENDIF
		        loWord.ActiveDocument.SAVEAS(lcDoc)
		    ENDIF
		ENDIF
		loWord.Visible = .T.
		IF lnWindow # 0
		    SetForegroundWindow(lnWindow)
		ENDIF
		**************************************************
		
		
		
		lnRows = 1
		lnColumns = Alen(laHeaders,1)
		loChart.oBMP.toClipboard()
		= OpenClipboard (0)
		= CloseClipboard ()
		With loWord
		    .Selection.WholeStory
		
		    hClipBMP = GetClipboardData (cf_bitmap)
		    IF hClipBMP = 0 or GetObjectType(hClipBMP) # obj_bitmap
		        * = MESSAGEBOX("There is no image stored in the clipboard.",48,"Error creating file")
		        lcFile = Addbs(GetEnv('temp'))+Sys(2015)+".PNG"
		        loChart.SaveToFile(lcFile)
		        .Selection.InlineShapes.AddPicture(lcFile,.F.,.T.)
		        Erase (lcFile)
		    Else
		        .Selection.paste()
		    endif
		    .ActiveDocument.Tables.Add(.Selection.Range(), m.lnRows, m.lnColumns, .T., .F.)
		    lcTableNum = evl(lcTableNum,1)
		    Select (loChart.SourceAlias)
		    loTable = .ActiveDocument.Tables(lcTableNum)
		    loTable.Select
		    lnStartRows = 1 &&loTable.ROWS.COUNT fo multiple use
		    lcString = ''
		    For lnLine = 1 To m.lnColumns
		        lcString = m.lcString+Alltrim(laHeaders(m.lnLine,2))+Chr(13)
		    Next
		    Select (loChart.SourceAlias)
		    lnRows = 0
		    Scan
		        lnRows = m.lnRows + 1
		        For lnLine=1 To m.lnColumns
		            lcVal = laHeaders(m.lnLine,1)
		            lnType = Vartype(&lcVal)
		            If lnType<>'U'
		                luValue = nvl(evaluate(laHeaders(m.lnLine,1)),'')
		            Else
		                luValue = ''
		            Endif
		            lcString = m.lcString + iif(Vartype(m.luValue) = 'C',Alltrim(m.luValue),Alltrim(Str(m.luValue)))+Chr(13)
		        Next
		    Endscan
		    If lnRows>1
		        .Selection.movedown (5, 1)
		        .Selection.insertrows(m.lnRows-1)
		    Endif
		    _Cliptext = m.lcString
		    lnStart = loTable.cell(m.lnStartRows,1).Range.Start
		    lnEnd = loTable.cell(m.lnStartRows + m.lnRows-1,m.lnColumns).Range.End
		    .ActiveDocument.Range(lnStart,lnEnd).Paste()
		    .Selection.TypeParagraph
		    loTable.cell(1,1).Range.Text=''
		Endwith
	ENDPROC

	PROCEDURE cntChartRow.spnChartsRow.InteractiveChange
		If This.Value<=3 Then
			Thisform.foxcharts.ChartRow=This.Value
			Thisform.foxcharts.DrawChart()
		Endif
		*LOCAL loChart as FoxCharts OF "..\Source\FoxCharts.Vcx"
		*loChart = This.Parent.Parent.Parent.oFoxcharts
		
		*loChart.ChartRow = This.Value
		*loChart.DrawChart()
		Return
		
	ENDPROC

ENDDEFINE
